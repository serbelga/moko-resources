[versions]
kotlinVersion = "1.7.20"
androidGradleVersion = "7.2.0"

# kotlinx
kotlinxSerializationVersion = "1.4.1"
kotlinxCoroutinesVersion = "1.6.4"

# android
constraintLayoutVersion = "2.0.4"
androidAppCompatVersion = "1.2.0"

# android compose
composeVersion = "1.0.5"
composeActivityVersion = "1.3.1"

# jetbrains compose
composeJetbrainsVersion = "1.3.0-beta03"

# jvm
apacheCommonsTextVersion = "1.3"
kotlinPoetVersion = "1.10.2"
detektVersion = "1.15.0"
icu4jVersion = "69.1"
commonsCodecVersion = "1.15"

# tests
espressoCoreVersion = "3.3.0"
testRunnerVersion = "1.3.0"
testRulesVersion = "1.3.0"
testExtJunitVersion = "1.1.2"
testCoreVersion = "1.4.0"
robolectricVersion = "4.8.1"

# moko
mokoGraphicsVersion = "0.9.0"
mokoParcelizeVersion = "0.8.0"
mokoTestVersion = "0.5.0"
mokoResourcesVersion = "0.20.1"
mokoMultiplatformPluginVersion = "0.14.1"

[libraries]
# kotlinx
kotlinxSerialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationVersion" }
kotlinxCoroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesVersion" }
coroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesVersion" }

# moko
mokoParcelize = { module = "dev.icerock.moko:parcelize", version.ref = "mokoParcelizeVersion" }
mokoGraphics = { module = "dev.icerock.moko:graphics", version.ref = "mokoGraphicsVersion" }
mokoTestCore = { module = "dev.icerock.moko:test-core", version.ref = "mokoTestVersion" }

# android
appCompat = { module = "androidx.appcompat:appcompat", version.ref = "androidAppCompatVersion" }
constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayoutVersion" }

# android compose
composeActivity = { module = "androidx.activity:activity-compose", version.ref = "composeActivityVersion" }

# jetbrains compose
composeGradlePlugin = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "composeJetbrainsVersion" }

# jvm
kotlinPoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinPoetVersion" }
apacheCommonsText = { module = "org.apache.commons:commons-text", version.ref = "apacheCommonsTextVersion" }
commonsCodec = { module = "commons-codec:commons-codec", version.ref = "commonsCodecVersion" }
icu4j = { module = "com.ibm.icu:icu4j", version.ref = "icu4jVersion" }

# tests
espressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCoreVersion" }
kotlinTestJUnit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlinVersion" }
testCore = { module = "androidx.test:core", version.ref = "testCoreVersion" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectricVersion" }
testRunner = { module = "androidx.test:runner", version.ref = "testRunnerVersion" }
testRules = { module = "androidx.test:rules", version.ref = "testRulesVersion" }
testExtJunit = { module = "androidx.test.ext:junit", version.ref = "testExtJunitVersion" }
kotlinTest = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlinVersion" }
kotlinTestAnnotations = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlinVersion" }

# gradle
kotlinGradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinVersion" }
androidGradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "androidGradleVersion" }
kotlinCompilerEmbeddable = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable", version.ref = "kotlinVersion" }
detektGradlePlugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detektVersion" }
mokoMultiplatformPlugin = { module = "dev.icerock:mobile-multiplatform", version.ref = "mokoMultiplatformPluginVersion" }
composeJetBrainsPlugin = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "composeJetbrainsVersion" }
autoManifestPlugin = { module = "com.gradleup:auto-manifest-plugin", version = "1.1.1" }
